# Workflow to run automated tests on java-framework code pushed to the repository
name: E2E java-framework UI tests

env:
  LOG_LEVEL: debug
  ENVIRONMENT: staging
  suiteXmlFile: regression.xml
  browser: remote-chrome
  browser-version: '106.0.5249.119'
  headlessBrowser: false
  useSeleniumGrid: true
  testsThreadCount: 10
  working-directory: ./java-framework
  report-directory: ./java-framework/target/surefire-reports
  
on:
  workflow_call:
      inputs:
        target-environment:
          description: 'The environment to run the tests against'
          default: staging
          required: true
          type: string
        config-path:
          required: false
          type: string
        source-branch:
          description: 'The branch to be tested'
          default: develop
          required: true
          type: string
      outputs:
        workflow-status:
          value: ${{ jobs.build-and-test.outputs.job-status }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.source-branch }}
    strategy:
      fail-fast: true
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    outputs:
      job-status: ${{ steps.save-status.outputs.job-status }}

    services:
      website:
        image: gprestes/the-internet:latest
        ports:
          - 7080:5000
        options: >-
          --rm

      selenium-hub:
        image: selenium/hub:latest
        ports:
          - 4442:4442
          - 4443:4443
          - 4444:4444
        options: >-
          --rm
          -v /dev/shm:/dev/shm
        env:
          SE_VNC_NO_PASSWORD: 1
          SE_SESSION_RETRY_INTERVAL: 1
          SE_START_XVFB: true
          SE_SCREEN_WIDTH: 1920
          SE_SCREEN_HEIGHT: 1080

      chrome-node-video:
        image: selenium/video:latest
        options: >-
          -v /home/runner/work/the-internet-tests/java-framework/target:/home/seluser/Downloads
          -v /home/runner/work/the-internet-tests/java-framework/target/surefire-reports:/videos
        env:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
          SE_SESSION_RETRY_INTERVAL: 1
          SE_NODE_MAX_INSTANCES: 20
          SE_NODE_MAX_SESSIONS: 1
          SE_NODE_SESSION_TIMEOUT: 500
          SE_START_XVFB: true
          DISPLAY_CONTAINER_NAME: chrome-node
          FILE_NAME: chrome_video.mp4

      chrome-node:
        image: selenium/node-chrome:latest
        options: >-
          -v /home/runner/work/the-internet-tests/java-framework/target:/home/seluser/Downloads
        env:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
          SE_SESSION_RETRY_INTERVAL: 1
          SE_NODE_MAX_INSTANCES: 20
          SE_NODE_MAX_SESSIONS: 4
          SE_NODE_SESSION_TIMEOUT: 500
          SE_START_XVFB: true

    steps:
      - name: Repo permissions
        run: sudo chown -R `whoami`:admin /home/runner/work/
      - name: Repo Cache
        uses: actions/cache@v3.0.11
        with:
          path: /home/runner/work/the-internet-tests/**
          key: repository-cache-{hash}
          restore-keys: repository-cache-
      - name: Checkout repo code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.source-branch }}
          fetch-depth: 0
      - name: JDK Cache
        uses: actions/cache@v3.0.11
        with:
          path: /home/runner/work/the-internet-tests/**
          key: jdk19-cache-{hash}
          restore-keys: jdk19-cache
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'corretto'
      - name: Java Home
        run: echo $JAVA_HOME
      - name: Maven Home
        id: maven-home
        env:
          awk: "awk -F': ' '{print $2}'"
          MAVEN_PATH:
        run: |
          MAVEN_PATH=$(mvn --version | grep usr | ${{ env.awk }}) >> $GITHUB_ENV
          echo $MAVEN_PATH
      - name: Maven Dependencies Cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            /home/runner/work/.m2/**
            $MAVEN_PATH/lib/**
          key: clean-project-dependencies-{hash}
          restore-keys: clean-project-dependencies-
      - name: Clean
        run: mvn clean -P Staging -f pom.xml --batch-mode --update-snapshots
        working-directory: ${{env.working-directory}}
      - name: Build Dependencies Cache
        uses: actions/cache@v3.0.11
        with:
        # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            /home/runner/.m2/**
            $MAVEN_PATH/lib/**
        # An explicit key for restoring and saving the cache
          key: build-project-dependencies-{hash}
          restore-keys: build-project-dependencies
      - name: Build
        run: mvn compile -P Staging -f pom.xml --batch-mode --update-snapshots
        working-directory: ${{env.working-directory}}
      - name: Run the test suite
        id: tests-run
        env:
          browserVersion: ${{ env.browser-version }}
          headlessBrowser: false
          testRunnerAppAddress: "http://172.17.0.1:7080"
          webAppAddress: "http://172.17.0.1:7080"
          seleniumGridAddress: "http://172.17.0.1:4444/wd/hub"
        run: >-
          mvn test -P Staging -f pom.xml
          --batch-mode --update-snapshots -Dorg.slf4j.simpleLogger.defaultLogLevel=${{ env.LOG_LEVEL }}
        working-directory: ${{ env.working-directory }}
      - name: Preserve tests-run status
        id: save-status
        run: echo "job-status=${{ steps.tests-run.conclusion }}" >> $GITHUB_OUTPUT
      - if: env.job-status == 'failure' || env.job-status == 'error'
        name: Validate tests-run status
        run: exit 1
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test run report
          path: ${{ env.report-directory }}
      - name: Install
        run: mvn install -P Staging -f pom.xml -DskipTests --batch-mode --update-snapshots
        working-directory: ${{env.working-directory}}
      - name: Report Folder
        run: ls -R
        working-directory: ${{env.report-directory}}
      - name: Finished build and test phase
        run: echo "Finished build and test phase"