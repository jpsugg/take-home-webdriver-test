name: Test develop code and create PR to staging

on:
  push:
    branches:
      - develop
    paths:
      - java-framework/**
      - .github/workflows/**

jobs:
  load-docker-cache:
    runs-on: ubuntu-latest
    name: Set up the docker layers cache
    steps:
      - name: Cache Docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: services-docker-cache-{hash}
          restore-keys: |
            foo-docker-cache-

  build-and-test-project:
    name: Build and test phase
    needs: load-docker-cache
    uses: jpsugg/the-internet-tests/.github/workflows/run-e2e-tests-java-framework.yml@develop
    with:
      environment: develop
      branch: develop
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}


  build-and-test-project-validation:
    name: Validate build and test success
    needs: build-and-test-project
    runs-on: ubuntu-latest
    steps:
      - name: Build and test success
        if: ${{ needs.build-and-test-project.outputs.workflow-status != 'success' }}
        run: |
          echo Build and test phase failed
          exit 1

  create-pr:
    name: Create Pull Request
    needs: build-and-test-project
    if: needs.build-and-test-project.outputs.workflow-status == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: pull-request-action
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_PREFIX: ""
          PULL_REQUEST_BRANCH: "staging"
          PULL_REQUEST_FROM_BRANCH: "develop"
          PULL_REQUEST_TITLE: "Post-testing automated PR"
      - name: Finish PR creation
        run: echo "PR created successfully"
        if: ${{ success() }}
      - if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        name: Failed to create PR
        run: |
          echo Failed to create the PR
          exit 1

  merge-pr:
    name: Deploy to staging
    needs: create-pr
    if: needs.create-pr.outputs.workflow-status == 'success'
    uses: jpsugg/the-internet-tests/.github/workflows/merge-develop-into-staging.yaml@develop
    with:
      target-environment: staging

  merge-pr-validation:
    name: Validate deploy success
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - name: Automated PR merge success
        if: ${{ needs.merge-pr.outputs.workflow-status != 'success' }}
        run: |
          echo Deployment phase failed
          exit 1
