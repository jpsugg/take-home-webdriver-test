name: Test develop code and create PR to staging

on:
  push:
    branches:
    - develop
    paths:
    - java-framework/**
    - .github/workflows/

jobs:
  build-and-test-project:
    name: Build and test phase
    strategy:
      max-parallel: 1
      fail-fast: true
    uses: jpsugg/the-internet-tests/.github/workflows/java-framework-run-e2e-tests.yml@develop
    with:
      target-environment: staging
      source-branch: develop
    secrets: inherit
  
  create-pr:
    strategy:
      max-parallel: 1
      fail-fast: true
    needs: build-and-test-project
    if: needs.build-and-test-project.result == 'success'
    name: Create Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: pull-request-action
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_PREFIX: ""
          PULL_REQUEST_BRANCH: "staging"
          PULL_REQUEST_FROM_BRANCH: "develop"
          PULL_REQUEST_TITLE: "Post-testing automated PR"
      - name: Finish PR creation
        run: echo "PR created successfully"
        if: ${{ success() }}
      - if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        name:
        run: |
          echo Failed to create the PR
          exit 1

  merge-pr:
    name: Deploy to staging
    strategy:
      max-parallel: 1
      fail-fast: true
    needs: create-pr
    if: needs.create-pr.result == 'success'
    uses: jpsugg/the-internet-tests/.github/workflows/merge-develop-into-staging.yaml@develop
    with:
      target-environment: staging
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      workflow-status

  merge-pr-validation:
    name: Validate deploy success
    needs: merge-pr
    runs-on: ubuntu-latest
    steps:
      - name: Automated PR merge success
        if: ${{ needs.merge-pr.outputs.workflow-status != 'success' }}
        run: |
          echo Deployment phase failed
          exit 1

  if_error_or_failure:
    runs-on: ubuntu-latest
    if: >-
      github.event.state == 'error' ||
      github.event.state == 'failure'
    steps:
      - env:
          DESCRIPTION: ${{ github.event.description }}
        run: |
          echo The status is error or failed: $DESCRIPTION
          echo Workflow failed
          exit 1